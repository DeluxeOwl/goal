package:`
// Code generated by math.goal. DO NOT EDIT.

package goal

import "math"
`
ftpl:`
func VXXXX(ctx *Context, args []V) V {
	switch len(args) {
	case 1:
		return fXXXX(args[0])
        default:
		return panicRank("YYYY")
        }
}

func fXXXX(x V) V {
	if x.IsI() {
		return NewF(math.XXXX(float64(x.I())))
	}
	if x.IsF() {
		return NewF(math.XXXX(x.F()))
	}
	switch xv := x.value.(type) {
	case *AB:
		return fXXXX(fromABtoAF(xv))
	case *AI:
		return fXXXX(toAF(xv))
	case *AF:
		r := xv.reuse()
		for i, xi := range xv.Slice {
			r.Slice[i] = math.XXXX(xi)
		}
		return NewV(r)
	case *AV:
		r := xv.reuse()
		for i, xi := range xv.Slice {
			r.Slice[i] = fXXXX(xi)
			if r.Slice[i].IsPanic() {
				return r.Slice[i]
			}
		}
		return NewV(r)
	default:
		return panicType("YYYY x", "x", x)
	}
}
`
dotpl:{sub[ftpl;"XXXX" "YYYY";(x;y)]}
funcs:+/({dotpl . x}'(
  ("Sin";"sin")
  ("Cos";"cos")
  ("Tan";"tan")
  ("Asin";"asin")
  ("Acos";"acos")
  ("Atan";"atan")
  ("Exp";"exp")
  ("Log";"log")
))
"math.go" say package+funcs
shell `gofmt -s -w math.go`
